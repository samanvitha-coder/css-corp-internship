Collections
-The Collection in Java is a framework that provides an architecture to store and manipulate the group of objects.
-Java Collections can achieve all the operations that you perform on a data such as searching, sorting, insertion, manipulation, and deletion.

-Java Collection means a single unit of objects.
-Java Collection framework provides many
interfaces (Set, List, Queue, Deque)
 classes (ArrayList,Vector, LinkedList, PriorityQueue, HashSet, LinkedHashSet, TreeSet).

Set – An unordered collection no duplicates are permitted.
List – An ordered collection duplicates are permitted.

What is a framework in Java?
-It provides ready made architecture.
-It represents a set of classes and interfaces.
-It is optional.

What is Collection framework?
-The Collection framework represents a unified architecture for storing and manipulating a group of objects.
It has:
-Interfaces and its implementations, i.e., classes
-Algorithm

ITERATORS
-Iteration is the process of retrieving every element in a collection.
-The basic Iterator interface allows you to scan forward through any collection.

1)List Interface:
-List interface is the child interface of Collection interface.
-It inhibits a list type data structure in which we can store the ordered collection of objects.
-It can have duplicate values.
-List interface is implemented by the classes ArrayList, LinkedList, Vector, and Stack.

To instantiate the List interface, we must use :

List <data-type> list1= new ArrayList();
List <data-type> list2 = new LinkedList();
List <data-type> list3 = new Vector();
List <data-type> list4 = new Stack();

2)ArrayList
-The ArrayList class implements the List interface.
-It uses a dynamic array to store the duplicate element of different data types.
-The ArrayList class maintains the insertion order and is non-synchronized.
-The elements stored in the ArrayList class can be randomly accessed.

3)LinkedList
-LinkedList implements the Collection interface.
-It uses a doubly linked list internally to store the elements.
-It can store the duplicate elements. It maintains the insertion order and is not synchronized.
-In LinkedList, the manipulation is fast because no shifting is required.

4)Vector
-Vector uses a dynamic array to store the data elements. It is similar to ArrayList.
-It is synchronized and contains many methods that are not the part of Collection framework.

5)Stack
-The stack is the subclass of Vector.
-It implements the last-in-first-out data structure, i.e., Stack.
-The stack contains all of the methods of Vector class and also provides its methods like boolean push(), boolean peek(), boolean push(object o), which defines its properties.

6)PriorityQueue
-The PriorityQueue class implements the Queue interface.
-It holds the elements or objects which are to be processed by their priorities.
-PriorityQueue doesn't allow null values to be stored in the queue.

7)ArrayDeque
-ArrayDeque class implements the Deque interface.
-It facilitates us to use the Deque. Unlike queue, we can add or delete the elements from both the ends.
-ArrayDeque is faster than ArrayList and Stack and has no capacity restrictions.

8)HashSet
-HashSet class implements Set Interface.
-It represents the collection that uses a hash table for storage.
-Hashing is used to store the elements in the HashSet. It contains unique items.

9)LinkedHashSet
-LinkedHashSet class represents the LinkedList implementation of Set Interface.
-It extends the HashSet class and implements Set interface. Like HashSet, It also contains unique elements.
-It maintains the insertion order and permits null elements.

10)SortedSet Interface
-SortedSet is the alternate of Set interface that provides a total ordering on its elements.
-The elements of the SortedSet are arranged in the increasing (ascending) order.
-The SortedSet provides the additional methods that inhibit the natural ordering of the elements.

11)TreeSet
-Java TreeSet class implements the Set interface that uses a tree for storage.
-Like HashSet, TreeSet also contains unique elements.
-The access and retrieval time of TreeSet is quite fast.
-The elements in TreeSet stored in ascending order.
