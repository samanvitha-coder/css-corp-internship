Map
A Map object describes mappings from keys to values:
-Duplicate keys are not allowed
-One-to-many mappings from keys to values is not permitted
-The contents of the Map interface can be viewed and manipulated as collections
-entrySet – Returns a Set of all the key-value pairs.
-keySet – Returns a Set of all the keys in the map.
-values – Returns a Collection of all values in the map.

1)HashMap
-Java HashMap class implements the Map interface which allows us to store key and value pair, where keys should be unique.
-If you try to insert the duplicate key, it will replace the element of the corresponding key.
-It is easy to perform operations using the key index like updation, deletion, etc.
-HashMap class is found in the java.util package.
-HashMap in Java is like the legacy Hashtable class, but it is not synchronized.
-It allows us to store the null elements as well, but there should be only one null key.
-Since Java 5, it is denoted as HashMap<K,V>, where K stands for key and V for value.
-It inherits the AbstractMap class and implements the Map interface

2)TreeMap class
-Java TreeMap class is a red-black tree based implementation.
-It provides an efficient means of storing key-value pairs in sorted order.
The important points about Java TreeMap class are:
  Java TreeMap contains values based on the key.
  It implements the NavigableMap interface and extends AbstractMap class.
  Java TreeMap contains only unique elements.
  Java TreeMap cannot have a null key but can have multiple null values.
  Java TreeMap is non synchronized.
  Java TreeMap maintains ascending order